{"ast":null,"code":"import { TASKS_REQUEST, TASKS_SUCCESS, TASKS_FAILURE } from \"../types\";\nconst {\n  REACT_APP_API_ENDPOINT: API_ENDPOINT\n} = process.env;\nexport const tasksRequest = () => ({\n  type: TASKS_REQUEST\n});\nexport const tasksSuccess = data => ({\n  type: TASKS_SUCCESS,\n  payload: data\n});\nexport const tasksFailure = error => ({\n  type: TASKS_FAILURE,\n  payload: error\n});\nconst config = {\n  headers: {\n    Authorization: 'Bearer' + localStorage.getItem(\"token\")\n  }\n};\nexport const getTasks = path => dispatch => {\n  dispatch(tasksRequest());\n  axios.get(`${API_ENDPOINT}task/${path}`, config).then(data => {\n    dispatch(tasksSuccess(data.result));\n  }).catch(error => dispatch(tasksFailure(error)));\n};\nexport const deleteTask = id => dispatch => {\n  axios.delete(`${API_ENDPOINT}task/${id}`, config).then(data => dispatch(getTasks(\"\"))).catch(error => dispatch(tasksFailure(error)));\n};\nexport const editTaskStatus = data => dispatch => {\n  const statusArray = [\"NEW\", \"IN PROGRESS\", \"FINISHED\"];\n  const newStatusIndex = statusArray.indexOf(data.status) > 1 ? 0 : statusArray.indexOf(data.status) + 1;\n  const bodyParameters = {\n    task: {\n      title: data.title,\n      importance: data.importance,\n      status: statusArray[newStatusIndex],\n      description: data.description\n    }\n  };\n  axios.patch(`${API_ENDPOINT}task/${data._id}`, config, bodyParameters).then(data => dispatch(getTasks(\"\"))).catch(error => dispatch(tasksFailure(error)));\n};","map":{"version":3,"names":["TASKS_REQUEST","TASKS_SUCCESS","TASKS_FAILURE","REACT_APP_API_ENDPOINT","API_ENDPOINT","process","env","tasksRequest","type","tasksSuccess","data","payload","tasksFailure","error","config","headers","Authorization","localStorage","getItem","getTasks","path","dispatch","axios","get","then","result","catch","deleteTask","id","delete","editTaskStatus","statusArray","newStatusIndex","indexOf","status","bodyParameters","task","title","importance","description","patch","_id"],"sources":["C:/Users/Valeria Rico/Documents/Alkemy/React II/Proyecto React II/Proyecto Avengers/client/src/store/actions/tasksActions.js"],"sourcesContent":["import { TASKS_REQUEST, TASKS_SUCCESS, TASKS_FAILURE } from \"../types\"\r\n\r\nconst { REACT_APP_API_ENDPOINT: API_ENDPOINT } = process.env\r\n\r\nexport const tasksRequest = () => ({\r\n   type: TASKS_REQUEST,\r\n})\r\n\r\nexport const tasksSuccess = data => ({\r\n   type: TASKS_SUCCESS,\r\n   payload: data,\r\n})\r\n\r\nexport const tasksFailure = error => ({\r\n   type: TASKS_FAILURE,\r\n   payload: error,\r\n})\r\n\r\nconst config = {\r\n   headers: { Authorization: 'Bearer'  + localStorage.getItem(\"token\") }\r\n};\r\n\r\nexport const getTasks = path => dispatch => {\r\n   dispatch(tasksRequest())\r\n   axios.get(`${API_ENDPOINT}task/${path}`, \r\n   config)\r\n      .then(data => {\r\n         dispatch(tasksSuccess(data.result))\r\n      })\r\n      .catch(error => dispatch(tasksFailure(error)))\r\n}\r\n\r\nexport const deleteTask = id => dispatch => {\r\n   axios.delete(`${API_ENDPOINT}task/${id}`, config)\r\n       .then(data => dispatch(getTasks(\"\")))\r\n      .catch(error => dispatch(tasksFailure(error)))\r\n}\r\n\r\nexport const editTaskStatus = data => dispatch => {\r\n   const statusArray = [\"NEW\", \"IN PROGRESS\", \"FINISHED\"]\r\n\r\n   const newStatusIndex =\r\n      statusArray.indexOf(data.status) > 1\r\n         ? 0\r\n         : statusArray.indexOf(data.status) + 1\r\n\r\n         const bodyParameters = {\r\n            task: {\r\n               title: data.title,\r\n               importance: data.importance,\r\n               status: statusArray[newStatusIndex],\r\n               description: data.description,\r\n            },\r\n         }\r\n   axios.patch(`${API_ENDPOINT}task/${data._id}`, config, bodyParameters)\r\n      .then(data => dispatch(getTasks(\"\")))\r\n      .catch(error => dispatch(tasksFailure(error)))\r\n}"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,aAAxB,EAAuCC,aAAvC,QAA4D,UAA5D;AAEA,MAAM;EAAEC,sBAAsB,EAAEC;AAA1B,IAA2CC,OAAO,CAACC,GAAzD;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAO;EAChCC,IAAI,EAAER;AAD0B,CAAP,CAArB;AAIP,OAAO,MAAMS,YAAY,GAAGC,IAAI,KAAK;EAClCF,IAAI,EAAEP,aAD4B;EAElCU,OAAO,EAAED;AAFyB,CAAL,CAAzB;AAKP,OAAO,MAAME,YAAY,GAAGC,KAAK,KAAK;EACnCL,IAAI,EAAEN,aAD6B;EAEnCS,OAAO,EAAEE;AAF0B,CAAL,CAA1B;AAKP,MAAMC,MAAM,GAAG;EACZC,OAAO,EAAE;IAAEC,aAAa,EAAE,WAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;EAA7B;AADG,CAAf;AAIA,OAAO,MAAMC,QAAQ,GAAGC,IAAI,IAAIC,QAAQ,IAAI;EACzCA,QAAQ,CAACd,YAAY,EAAb,CAAR;EACAe,KAAK,CAACC,GAAN,CAAW,GAAEnB,YAAa,QAAOgB,IAAK,EAAtC,EACAN,MADA,EAEIU,IAFJ,CAESd,IAAI,IAAI;IACXW,QAAQ,CAACZ,YAAY,CAACC,IAAI,CAACe,MAAN,CAAb,CAAR;EACF,CAJJ,EAKIC,KALJ,CAKUb,KAAK,IAAIQ,QAAQ,CAACT,YAAY,CAACC,KAAD,CAAb,CAL3B;AAMF,CARM;AAUP,OAAO,MAAMc,UAAU,GAAGC,EAAE,IAAIP,QAAQ,IAAI;EACzCC,KAAK,CAACO,MAAN,CAAc,GAAEzB,YAAa,QAAOwB,EAAG,EAAvC,EAA0Cd,MAA1C,EACKU,IADL,CACUd,IAAI,IAAIW,QAAQ,CAACF,QAAQ,CAAC,EAAD,CAAT,CAD1B,EAEIO,KAFJ,CAEUb,KAAK,IAAIQ,QAAQ,CAACT,YAAY,CAACC,KAAD,CAAb,CAF3B;AAGF,CAJM;AAMP,OAAO,MAAMiB,cAAc,GAAGpB,IAAI,IAAIW,QAAQ,IAAI;EAC/C,MAAMU,WAAW,GAAG,CAAC,KAAD,EAAQ,aAAR,EAAuB,UAAvB,CAApB;EAEA,MAAMC,cAAc,GACjBD,WAAW,CAACE,OAAZ,CAAoBvB,IAAI,CAACwB,MAAzB,IAAmC,CAAnC,GACK,CADL,GAEKH,WAAW,CAACE,OAAZ,CAAoBvB,IAAI,CAACwB,MAAzB,IAAmC,CAH3C;EAKM,MAAMC,cAAc,GAAG;IACpBC,IAAI,EAAE;MACHC,KAAK,EAAE3B,IAAI,CAAC2B,KADT;MAEHC,UAAU,EAAE5B,IAAI,CAAC4B,UAFd;MAGHJ,MAAM,EAAEH,WAAW,CAACC,cAAD,CAHhB;MAIHO,WAAW,EAAE7B,IAAI,CAAC6B;IAJf;EADc,CAAvB;EAQNjB,KAAK,CAACkB,KAAN,CAAa,GAAEpC,YAAa,QAAOM,IAAI,CAAC+B,GAAI,EAA5C,EAA+C3B,MAA/C,EAAuDqB,cAAvD,EACIX,IADJ,CACSd,IAAI,IAAIW,QAAQ,CAACF,QAAQ,CAAC,EAAD,CAAT,CADzB,EAEIO,KAFJ,CAEUb,KAAK,IAAIQ,QAAQ,CAACT,YAAY,CAACC,KAAD,CAAb,CAF3B;AAGF,CAnBM"},"metadata":{},"sourceType":"module"}